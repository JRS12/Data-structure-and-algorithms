#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct Node
{   
	int data;
	struct Node *next;
};


struct Node * insertatbegin(struct Node *head)
{
    // struct Node * ptr;
    // ptr = (struct Node * )malloc(sizeof(struct Node));
    struct Node *p =head;
     struct Node *newnode;
    newnode = (struct node *)malloc(sizeof(struct Node));
    printf("new node data -: ");
    scanf("%d",&newnode->data);
    newnode->next = p;
    traverse(newnode);
   

    return p ;
}
void traverse();

int main()
{
	struct Node *node1 = (struct Node*)malloc(sizeof(struct Node));
    struct Node *node2 = (struct Node*)malloc(sizeof(struct Node));
    struct Node *node3 = (struct Node*)malloc(sizeof(struct Node));
    struct Node *node4 = (struct Node*)malloc(sizeof(struct Node));
    
         printf("enter first element of node 1-\n:");
         scanf("%d",&node1->data);
         node1->next = node2;
         printf("enter second element  of node 2-\n:");
         scanf("%d",&node2->data);
         node2->next = node3;
         printf("enter third element  of node 3-\n:");
         scanf("%d",&node3->data);
         node3->next = node4;
         printf("enter first element of node 4-\n :");
         scanf("%d",&node4->data);
         node4->next = NULL;
           traverse(node1);
          printf("\t\t now we insert new node \n");
           node1= insertatbegin(node1);
           
          
           

    }

void traverse(struct Node *ptr)
{
     while (ptr != NULL)
    {
        printf("Element: %d\n", ptr->data);
        ptr = ptr->next;
    }
    return;
}
